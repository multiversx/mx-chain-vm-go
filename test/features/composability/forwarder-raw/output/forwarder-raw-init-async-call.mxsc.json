{
    "buildInfo": {
        "rustc": {
            "version": "1.87.0",
            "commitHash": "17067e9ac6d7ecb70e50f92c1944e545188d2359",
            "commitDate": "2025-05-09",
            "channel": "Stable",
            "short": "rustc 1.87.0 (17067e9ac 2025-05-09)"
        },
        "contractCrate": {
            "name": "forwarder-raw",
            "version": "0.0.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.59.1"
        }
    },
    "abi": {
        "docs": [
            "Test contract for investigating async calls.",
            "TODO: split into modules"
        ],
        "name": "ForwarderRaw",
        "constructor": {
            "docs": [
                "Will not work, only written for VM testing.",
                "",
                "Async calls are explicitly forbidden in constructors."
            ],
            "inputs": [
                {
                    "name": "to",
                    "type": "Address"
                },
                {
                    "name": "endpoint_name",
                    "type": "bytes"
                },
                {
                    "name": "args",
                    "type": "variadic<bytes>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        "upgradeConstructor": {
            "docs": [
                "Will not work, only written for VM testing.",
                "",
                "Async calls are explicitly forbidden in upgrade constructors.",
                "",
                "TODO: write test once scenario tests support upgrades directly."
            ],
            "inputs": [
                {
                    "name": "to",
                    "type": "Address"
                },
                {
                    "name": "endpoint_name",
                    "type": "bytes"
                },
                {
                    "name": "args",
                    "type": "variadic<bytes>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        "endpoints": [],
        "events": [
            {
                "identifier": "callback_raw",
                "inputs": [
                    {
                        "name": "arguments",
                        "type": "List<bytes>"
                    }
                ]
            },
            {
                "identifier": "execute_on_dest_context_result",
                "inputs": [
                    {
                        "name": "result",
                        "type": "List<bytes>"
                    }
                ]
            },
            {
                "identifier": "execute_on_same_context_result",
                "inputs": [
                    {
                        "name": "result",
                        "type": "List<bytes>"
                    }
                ]
            }
        ],
        "esdtAttributes": [],
        "hasCallback": true,
        "types": {}
    },
    "code": "0061736d01000000013d0b60027f7f017f60017f017f60027f7f0060017f006000017f60000060037f7f7f017f60047f7f7f7f017f60027f7e0060037f7f7f0060047f7f7f7f0002f7031603656e760a6d4275666665724e6577000403656e760d6d427566666572417070656e64000003656e76126d427566666572417070656e644279746573000603656e76126d616e616765645369676e616c4572726f72000303656e76106d4275666665724765744c656e677468000103656e760b7369676e616c4572726f72000203656e760f6765744e756d417267756d656e7473000403656e760f6d4275666665725365744279746573000603656e760e626967496e74536574496e743634000803656e76136d42756666657253746f7261676553746f7265000003656e76126d42756666657253746f726167654c6f6164000003656e76126d427566666572476574417267756d656e74000003656e760e636865636b4e6f5061796d656e74000503656e7612626967496e7447657443616c6c56616c7565000303656e760a626967496e745369676e000103656e761c6d616e616765644765744d756c74694553445443616c6c56616c7565000303656e7609626967496e74416464000903656e76096d4275666665724571000003656e76196d42756666657246726f6d426967496e74556e7369676e6564000003656e760f6d616e6167656457726974654c6f67000203656e76136d42756666657247657442797465536c696365000703656e76106d616e616765644173796e6343616c6c000a03131201040001010203030501040201070202050505030100030616037f01418080080b7f0041f581080b7f00418082080b074106066d656d6f7279020004696e697400260863616c6c4261636b0027077570677261646500260a5f5f646174615f656e6403010b5f5f686561705f6261736503020c01020ad50e120f01017f10002201200010011a20010b08004101410010180b1101017f102022022000200110071a20020b3c01037f10172102200028020021010340200141f081082802004e4504402000200141016a220336020020022001101a101b200321010c010b0b20020b0d00200010202200100b1a20000b4601017f230041106b220224002002200141187420014180fe03714108747220014108764180fe03712001411876727236020c20002002410c6a410410021a200241106a24000b190041f0810828020020004c04400f0b41c8800841121005000b1900200041f081082802004c04400f0b41b7800841111005000b0b0041f0810810063602000b2b01027f200041f481082d0000220171200041ff017146220245044041f4810820002001723a00000b20020b1901017f41ec810841ec810828020041016b220036020020000b910102037f017e230041106b22022400200220013a000f20022001ad22054218883c000c20022005421088a722033a000d20022005420888a722043a000e20024100360208200041054104200141808080084922001b2000200341ff0171457122006a41002000200441ff01711b22006a4100200020011b6a2200200241086a6a410820006b101810091a200241106a24000be20102017e037f230041106b2202240020024200370308200010202203100a1a024020031004220441084b0d0020034100200220046b41106a200410234504402002290308220142388620014280fe0383422886842001428080fc0783421886200142808080f80f834208868484200142088842808080f80f832001421888428080fc07838420014228884280fe0383200142388884848422014280808080105a0d01200241106a24002001a70f0b41e8800841211005000b418e8108411b10182202200010011a200241b48008410310021a200241da8008410e10021a20021003000b0f00200020012003200210144100470b5101027f230041106b22022400200220001004220341187420034180fe03714108747220034108764180fe03712003411876727236020c20012002410c6a410410021a2001200010011a200241106a24000b830101027f230041106b220224002001280204220320012802084f047f4100052002410036020c200128020020032002410c6a410410231a2001200341046a360204200228020c220141187420014180fe03714108747220014108764180fe037120014118767272210341010b21012000200336020420002001360200200241106a24000bc00101047f230041106b22002400100c101e4102101d4100101a220110044120470440419d800841171018220041808008410210021a200041b48008410310021a200041ad8108411010021a20001003000b4101101a21022000410236020c2000410c6a10192103200028020c101c230041106b220024002000200136020010171a2000200336020c2000200236020820002000360204200041046a220028020028020020002802042102200028020821004176420010084176200220001015000bef05020a7f017e230041306b2200240010171a10171a101e4100101d20004100360218200041186a101921052000280218101c02404108101f0d004101101f450440415d100d0b415d100e41004c04404102101f450440415a100f0b41594101410010071a4159415a10011a0c010b415841828008410b10071a4159418d8008411010071a0b4159100421080340200320084f450440200041206a42003703002000420037031841592003200041186a411010231a200029021c210a200028022421012000280218210241da81084111101822061016220441a98108410410021a200241187420024180fe03714108747220024108764180fe03712002411876727210162107102022024200100820022002200141187420014180fe03714108747220014108764180fe037120014118767272101020041022210120061016220641898108410510021a2006200141016a2209101b10172101415841828008410b10071a024041582007101141004c04402007200110240c010b200041808080203602182001200041186a410410021a200141bd8108410410021a0b2000200a3703182001200041186a410810021a10202207200210121a2007200110242006200110091a200420091021200341106a21030c010b0b1017220241c18108410c1018101b1017101621012000200510043602202000410036021c200020053602180340200041106a200041186a1025200028021041017104402000200028021422041004220341187420034180fe03714108747220034108764180fe03712003411876727236022c20012000412c6a410410021a2001200410011a0c010b0b20022001101341cd8108410d101822031016220141a98108410410021a20011022210220031016220341898108410510021a2003200241016a2204101b101721022000200510043602202000410036021c200020053602180340200041086a200041186a102520002802084101710440200028020c200210240c010b0b2003200210091a200120041021200041306a24000b0bff010200418080080beb01746f45474c442d303030303030ffffffd80000000000000000ffffffdd617267756d656e74206465636f6465206572726f722028293a20746f6f2066657720617267756d656e7473746f6f206d616e7920617267756d656e7473696e70757420746f6f206c6f6e674d616e6167656442756666657220736c696365206f7574206f6620626f756e64732e6974656d73746f72616765206465636f6465206572726f7220286b65793a202e6c656e626164206172726179206c656e67746845474c4463616c6c6261636b5f72617763616c6c6261636b5f6172677363616c6c6261636b5f7061796d656e74730041ec81080b0438ffffff",
    "report": {
        "imports": [
            "bigIntAdd",
            "bigIntGetCallValue",
            "bigIntSetInt64",
            "bigIntSign",
            "checkNoPayment",
            "getNumArguments",
            "mBufferAppend",
            "mBufferAppendBytes",
            "mBufferEq",
            "mBufferFromBigIntUnsigned",
            "mBufferGetArgument",
            "mBufferGetByteSlice",
            "mBufferGetLength",
            "mBufferNew",
            "mBufferSetBytes",
            "mBufferStorageLoad",
            "mBufferStorageStore",
            "managedAsyncCall",
            "managedGetMultiESDTCallValue",
            "managedSignalError",
            "managedWriteLog",
            "signalError"
        ],
        "isMemGrow": false,
        "eiCheck": {
            "eiVersion": "1.4",
            "ok": true
        },
        "codeReport": {
            "path": "../output/forwarder-raw-init-async-call.wasm",
            "size": 2835,
            "hasAllocator": false,
            "hasPanic": "None"
        }
    }
}
