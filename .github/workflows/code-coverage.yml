name: Code-coverage

on:
  push:
    branches: [ master, rc/*, feat/* ]
  pull_request:
    branches: [ master, feat/*, rc/* ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
    runs-on: ${{ matrix.runs-on }}
    name: Build
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.6
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi
      - name: Run unit tests
        run: |
          TESTS_TO_RUN=$(go list ./... | grep -v /integrationTests/ | grep -v /fuzz/)
          go test -short -cover -coverprofile=coverage.txt -covermode=atomic -v ${TESTS_TO_RUN}

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
